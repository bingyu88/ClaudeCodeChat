window.translations = {
  en: {
    "page-title": "Claude Code Chat - Beautiful Claude Code Chat Interface for VS Code",
    "page-description": "Claude Code Chat: The most powerful VS Code AI chat assistant, supporting code understanding, refactoring, debugging, file search, MCP server, permission management, image pasting, and more. Claude Code Chat makes development more efficient and intelligent.",
    "page-keywords": "claude code chat, VS Code AI, AI chat, code assistant, AI programming, Claude, Anthropic, VSCode plugin, code refactoring, code debugging, MCP, file search, permission management, AI Copilot, AI development tools",
    "og-title": "Claude Code Chat - The Most Powerful VS Code AI Chat Assistant",
    "og-description": "Claude Code Chat: AI-powered development with code understanding, refactoring, debugging, file search, MCP server, permission management, and more. Claude Code Chat makes development more efficient and intelligent.",
    "og-site-name": "Claude Code Chat",
    "twitter-title": "Claude Code Chat - The Most Powerful VS Code AI Chat Assistant",
    "twitter-description": "Claude Code Chat: AI-powered development with code understanding, refactoring, debugging, file search, MCP server, permission management, and more. Claude Code Chat makes development more efficient and intelligent.",
    // Features
    "nav-features": "Features",
    "nav-key-features": "Key Features",
    "nav-getting-started": "Getting Started",
    "nav-usage": "Usage",
    "nav-configuration": "Configuration",
    "why-choose-title": "‚ú® Why Choose Claude Code Chat?",
    "why-choose-subtitle": "Experience the future of AI-assisted development with these powerful features",
    "feature-no-terminal-title": "No Terminal Required",
    "feature-no-terminal-desc": "Beautiful chat interface replaces command-line interactions",
    "feature-restore-title": "Restore Checkpoints",
    "feature-restore-desc": "Undo changes and restore code to any previous state",
    "feature-mcp-title": "MCP Server Support",
    "feature-mcp-desc": "Complete Model Context Protocol server management",
    "feature-history-title": "Conversation History",
    "feature-history-desc": "Automatic conversation history and session management",
    "feature-native-title": "VS Code Native",
    "feature-native-desc": "Claude Code integrated directly into VS Code with native theming and sidebar support",
    "feature-plan-title": "Plan and Thinking modes",
    "feature-plan-desc": "Plan First and configurable Thinking modes for better results",
    "feature-context-title": "Smart File/Image Context",
    "feature-context-desc": "Reference any file, paste images or screenshots",
    "feature-model-title": "Model Selection",
    "feature-model-desc": "Choose between Opus, Sonnet, or Default",
    "feature-wsl-title": "Windows/WSL Support",
    "feature-wsl-desc": "Full native Windows and WSL support",
    // Key Features
    "key-features-title": "üåü Key Features",
    "key-features-subtitle": "Discover the comprehensive set of tools that make Claude Code Chat the ultimate development companion",
    "kf-chat-title": "üí¨ Beautiful Chat Graphical Interface",
    "kf-chat-li1": "No terminal required - everything through the UI",
    "kf-chat-li2": "Real-time streaming responses with typing indicators",
    "kf-chat-li3": "One-click message copying with visual feedback",
    "kf-chat-li4": "Enhanced markdown support with syntax highlighting",
    "kf-chat-li5": "Auto-resizing input that grows with your content",
    "kf-chat-li6": "Copy-to-clipboard for code blocks",
    "kf-checkpoint-title": "‚è™ Checkpoint & Session Management",
    "kf-checkpoint-li1": "Restore Checkpoints - Instantly undo changes and restore to any previous state",
    "kf-checkpoint-li2": "Automatic Git-based backup system for safe experimentation",
    "kf-checkpoint-li3": "Browse and restore from any conversation checkpoint",
    "kf-checkpoint-li4": "Automatic conversation saving and restoration",
    "kf-checkpoint-li5": "Real-time cost and token tracking",
    "kf-checkpoint-li6": "Session statistics and performance metrics",
    "kf-mcp-title": "üîå MCP Server Management",
    "kf-mcp-li1": "Popular Servers Gallery - One-click installation of common MCP servers",
    "kf-mcp-li2": "Custom Server Creation - Build and configure your own MCP servers",
    "kf-mcp-li3": "Server Management - Edit, delete, enable/disable servers through UI",
    "kf-mcp-li4": "Automatic Integration - Seamless permissions and tool integration",
    "kf-mcp-li5": "Cross-platform Support - Full WSL compatibility with path conversion",
    "kf-perm-title": "üîí Advanced Permissions System",
    "kf-perm-li1": "Interactive Permission Dialogs - Detailed tool information with command previews",
    "kf-perm-li2": "Always Allow Functionality - Smart command pattern matching for common tools (npm, git, docker)",
    "kf-perm-li3": "YOLO Mode - Skip all permission checks for power users",
    "kf-perm-li4": "Workspace Permissions - Granular control over what tools can execute",
    "kf-perm-li5": "Real-time Permission Management - Add/remove permissions through intuitive UI",
    "kf-img-title": "üñºÔ∏è Image & Clipboard Support",
    "kf-img-li1": "Drag & Drop Images - Simply drag images directly into the chat",
    "kf-img-li2": "Clipboard Paste - Press Ctrl+V to paste screenshots and copied images",
    "kf-img-li3": "Multiple Image Selection - Choose multiple images through VS Code's file picker",
    "kf-img-li4": "Organized Storage - Automatic organization in .claude/claude-code-chat-images/",
    "kf-img-li5": "Format Support - PNG, JPG, JPEG, GIF, SVG, WebP, BMP formats",
    "kf-sidebar-title": "üì± Sidebar Integration",
    "kf-sidebar-li1": "Native VS Code Sidebar - Full chat functionality in the sidebar panel",
    "kf-sidebar-li2": "Smart Panel Management - Automatic switching between main and sidebar views",
    "kf-sidebar-li3": "Persistent Sessions - State maintained across panel switches",
    "kf-sidebar-li4": "Activity Bar Integration - Quick access from VS Code's activity bar",
    "kf-file-title": "üìÅ Smart File Integration",
    "kf-file-li1": "Type @ to instantly search and reference workspace files",
    "kf-file-li2": "Image attachments via file browser and copy-paste screeshots",
    "kf-file-li3": "Lightning-fast file search across your entire project",
    "kf-file-li4": "Seamless context preservation for multi-file discussions",
    "kf-tool-title": "üõ†Ô∏è Tool Management",
    "kf-tool-li1": "Visual dashboard showing all available Claude Code tools",
    "kf-tool-li2": "Real-time tool execution with formatted results",
    "kf-tool-li3": "Process control - start, stop, and monitor operations",
    "kf-tool-li4": "Smart permission system for secure tool execution",
    "kf-vscode-title": "üé® VS Code Integration",
    "kf-vscode-li1": "Native theming that matches your editor",
    "kf-vscode-li2": "Status bar integration with connection status",
    "kf-vscode-li3": "Activity bar panel for quick access",
    "kf-vscode-li4": "Responsive design for any screen size",
    "kf-model-title": "ü§ñ Model Selection",
    "kf-model-li1": "Opus - Most capable model for complex tasks requiring deep reasoning",
    "kf-model-li2": "Sonnet - Balanced model offering great performance for most use cases",
    "kf-model-li3": "Default - Uses your configured model setting",
    "kf-model-li4": "Model preference persists across sessions and is saved automatically",
    "kf-model-li5": "Easy switching via dropdown selector in the chat interface",
    "kf-model-li6": "Visual confirmation when switching between models",
    "kf-model-li7": "One-click model configuration through integrated terminal",
    "kf-slash-title": "‚ö° Slash Commands Integration",
    "kf-slash-li1": "Slash Commands Modal - Type \"/\" to access all Claude Code commands instantly",
    "kf-slash-li2": "19+ Built-in Commands - /cost, /status, /config, /help, /memory, /review, and more",
    "kf-slash-li3": "Custom Command Support - Execute any Claude Code command with session context",
    "kf-slash-li4": "Session-Aware Execution - All commands run with current conversation context",
    "kf-slash-li5": "Terminal Integration - Commands open directly in VS Code terminal with WSL support",
    "kf-ai-title": "üß† Advanced AI Modes",
    "kf-ai-li1": "Plan First Mode - Toggle to make Claude plan before implementing changes",
    "kf-ai-li2": "Thinking Mode - Configurable intensity levels (Think, Think Hard, Think Harder, Ultrathink)",
    "kf-ai-li3": "Mode Toggles - Simple switches above the text input area",
    "kf-ai-li4": "Intelligent Prompting - Different prompts based on selected thinking intensity",
    "kf-ai-li5": "Token Awareness - Higher thinking levels consume more tokens but provide deeper reasoning",
    // Usage Section
    "usage-title": "üí° Usage Examples",
    "usage-subtitle": "See how Claude Code Chat can transform your development experience",
    "usage-example1-title": "üî• Code Review & Refactoring",
    "usage-example1-user-label": "You:",
    "usage-example1-user-msg": "@src/components/UserProfile.tsx Can you review this component and suggest improvements?",
    "usage-example1-claude-label": "Claude:",
    "usage-example1-claude-msg": "I'll analyze your UserProfile component. Looking at the code, here are my recommendations: <ol><li><strong>Performance Optimization:</strong> Add React.memo() to prevent unnecessary re-renders</li><li><strong>TypeScript Enhancement:</strong> The props interface could be more specific</li><li><strong>Accessibility:</strong> Missing ARIA labels for screen readers</li></ol>[Detailed analysis with code examples follows...]",
    "usage-example2-title": "üìä Project Analysis",
    "usage-example2-user-label": "You:",
    "usage-example2-user-msg": "Analyze the overall architecture of my project and identify potential issues",
    "usage-example2-claude-label": "Claude:",
    "usage-example2-claude-msg": "I'll examine your project structure and identify areas for improvement:<p>üèóÔ∏è <strong>Architecture Overview</strong></p><ul><li>React frontend with TypeScript</li><li>Node.js backend with Express</li><li>MongoDB database layer</li></ul><p>‚ö†Ô∏è <strong>Identified Issues</strong></p><ul><li>Missing error boundaries in React components</li><li>Database queries lack proper indexing</li><li>API routes missing input validation</li></ul>[Detailed recommendations with implementation examples...]",
    "usage-example3-title": "üêõ Debugging Assistant",
    "usage-example3-user-label": "You:",
    "usage-example3-user-msg": "I'm getting a strange error in my API. Here's the stack trace: [paste error]",
    "usage-example3-claude-label": "Claude:",
    "usage-example3-claude-msg": "Looking at this stack trace, the issue appears to be a race condition in your async middleware. Here's what's happening:<ol><li><strong>Root Cause:</strong> Multiple requests are modifying shared state</li><li><strong>Solution:</strong> Implement proper request isolation</li><li><strong>Prevention:</strong> Add comprehensive error handling</li></ol>[Step-by-step debugging guide follows...]",
    "usage-example4-title": "‚è™ Safe Experimentation with Checkpoints",
    "usage-example4-user-label": "You:",
    "usage-example4-user-msg": "Can you refactor this entire component to use hooks instead of class components?",
    "usage-example4-claude-label": "Claude:",
    "usage-example4-claude-msg": "I'll refactor your component to use React hooks. Don't worry - I'll create a checkpoint first so you can easily restore if needed.<p>[Creates automatic checkpoint]</p><p>Here's the refactored component using hooks:</p><p>[Shows the new implementation]</p><p>If you want to revert these changes, just click \"Restore Checkpoint\" to go back to your original code instantly.</p>",
    // Footer
    "footer-copyright": "¬© 2025 Claude Code Chat. All rights reserved.",
    "footer-builtby": "Built by Claude Code for Claude Code.",
    "footer-disclaimer": "Claude is a trademark of Anthropic. VS Code is a trademark of Microsoft Corporation. This project is not officially affiliated with Anthropic or Microsoft.",
    // Tips
    "tips-title": "üéØ Pro Tips & Tricks",
    "tips-file-title": "üî• File Context Magic",
    "tips-file-li1": "Type @ followed by your search term to quickly reference files",
    "tips-file-li2": "Use @src/ to narrow down to specific directories",
    "tips-file-li3": "Reference multiple files in one message for cross-file analysis",
    "tips-file-li4": "NEW: Copy-paste images directly into chat for visual context",
    "tips-file-li5": "NEW: Paste screenshots with Ctrl+V for instant visual communication",
    "tips-prod-title": "‚ö° Productivity Boosters",
    "tips-prod-li1": "Creates checkpoints automatically before changes for safe experimentation",
    "tips-prod-li2": "Restore instantly if changes don't work out as expected",
    "tips-prod-li3": "NEW: Permission system prevents accidental tool execution",
    "tips-prod-li4": "NEW: YOLO mode for power users who want speed over safety",
    "tips-prod-li5": "Use the stop button to cancel long-running operations",
    "tips-prod-li6": "Copy message contents to reuse Claude's responses",
    "tips-prod-li7": "Open history panel to reference previous conversations",
    "tips-prod-li8": "NEW: Sidebar integration for multi-panel workflow",
    "tips-ui-title": "üé® Interface Customization",
    "tips-ui-li1": "The UI automatically adapts to your VS Code theme",
    "tips-ui-li2": "Messages are color-coded: Green for you, Blue for Claude",
    "tips-ui-li3": "Hover over messages to reveal the copy button",
    "tips-ui-li4": "NEW: Enhanced code block rendering with syntax highlighting",
    "tips-ui-li5": "NEW: Copy-to-clipboard functionality for code blocks",
    // Contributing/License/Support
    "contrib-title": "ü§ù Contributing",
    "contrib-subtitle": "Join our community and help improve Claude Code Chat",
    "contrib-how-title": "How to Contribute",
    "contrib-how-desc": "We welcome contributions! Here's how you can help:",
    "contrib-bug": "üêõ Report Bugs - Use our issue tracker",
    "contrib-idea": "üí° Suggest Features - Share your ideas",
    "contrib-pr": "üîß Submit PRs - Help us improve the codebase",
    "contrib-doc": "üìö Improve Docs - Make the documentation better",
    "contrib-dev-title": "Development Setup",
    "contrib-dev-pre": "git clone https://github.com/andrepimenta/claude-code-chat\ncd claude-code-chat\nnpm install\nClick \"F5\" to run the extension or access the \"Run and Debug\" section in VSCode",
    "contrib-license-title": "üìù License",
    "contrib-license-desc": "See the LICENSE file for details.",
    "contrib-ack-title": "üôè Acknowledgments",
    "contrib-ack-li1": "Anthropic - For creating the amazing Claude AI and more specifically the Claude Code SDK",
    "contrib-ack-li2": "VS Code Team - For the incredible extension platform",
    "contrib-ack-li3": "Our Community - For feedback, suggestions, and contributions",
    "contrib-support-title": "üìû Support",
    "contrib-support-desc": "Need help? We've got you covered:",
    "contrib-support-issue": "üêõ Issues: <a href=\"https://github.com/andrepimenta/claude-code-chat/issues\" target=\"_blank\">GitHub Issues</a>",
    // Hero
    "hero-badge": "VS Code Extension",
    "hero-title": "üöÄ Claude Code Chat",
    "hero-tagline": "Beautiful Claude Code Chat Interface for VS Code",
    "hero-desc1": "Ditch the command line and experience Claude Code like never before. This extension brings a stunning chat interface directly into your editor, making AI assistance accessible, visual, and enjoyable.",
    "hero-desc2": "Built by Claude Code for Claude Code - This extension was entirely developed using Claude Code itself. Claude Code created its own chat interface!",
    "cta-button": "Get Started",
    // Getting Started
    "getting-title": "üöÄ Getting Started",
    "getting-subtitle": "Set up Claude Code Chat in minutes and start enhancing your development workflow",
    "getting-prereq-title": "Prerequisites",
    "getting-prereq-li1": "<a href=\"https://code.visualstudio.com/Download\" target=\"_blank\">VS Code</a> 1.80+ - Latest version recommended",
    "getting-prereq-li2": "Claude Code CLI - <a href=\"https://claude.ai/code\" target=\"_blank\">Install from Anthropic</a>",
    "getting-prereq-li3": "Active Claude API or subscription - API or Pro/Max plan",
    "getting-install-title": "Installation",
    "getting-install-market": "Install from VS Code Marketplace",
    "getting-install-market-cmd": "ext install claude-code-chat",
    "getting-install-manual": "Or install manually",
    "getting-install-manual-li1": "<a href=\"vscode:extension/AndrePimenta.claude-code-chat\" target=\"_blank\">Download</a> the .vsix file from releases",
    "getting-install-manual-li2": "Run code --install-extension claude-code-chat-x.x.x.vsix",
    "getting-open-title": "Open Claude Code Chat",
    "getting-open-li1": "Press Ctrl+Shift+C (or Cmd+Shift+C on Mac)",
    "getting-open-li2": "Or click the Claude icon in your status bar",
    "getting-open-li3": "Or use Command Palette: Claude Code: Open Chat",
    "getting-shortcut-title": "Keyboard Shortcuts",
    "getting-shortcut-th1": "Shortcut",
    "getting-shortcut-th2": "Action",
    "getting-shortcut-row1-1": "Ctrl+Shift+C",
    "getting-shortcut-row1-2": "Open Claude Code Chat",
    "getting-shortcut-row2-1": "Enter",
    "getting-shortcut-row2-2": "Send message",
    "getting-shortcut-row3-1": "@",
    "getting-shortcut-row3-2": "Open file picker",
    "getting-shortcut-row4-1": "/",
    "getting-shortcut-row4-2": "Open slash commands modal",
    // Configuration
    "config-title": "‚öôÔ∏è Configuration",
    "config-subtitle": "Customize Claude Code Chat to fit your development environment",
    "config-wsl-title": "WSL Configuration (Windows Users)",
    "config-wsl-desc": "If you're using Claude Code through WSL (Windows Subsystem for Linux), you can configure the extension to use WSL:",
    "config-wsl-li1": "Open VS Code Settings (Ctrl+, or Cmd+,)",
    "config-wsl-li2": "Search for 'Claude Code Chat'",
    "config-wsl-li3": "Configure these settings:",
    "config-wsl-ul1": "Claude Code Chat: WSL Enabled - Enable WSL integration",
    "config-wsl-ul2": "Claude Code Chat: WSL Distro - Your WSL distribution name (e.g., Ubuntu, Debian)",
    "config-wsl-ul3": "Claude Code Chat: WSL Node Path - Path to Node.js in WSL (default: /usr/bin/node)",
    "config-wsl-ul4": "Claude Code Chat: WSL Claude Path - Path to Claude in WSL (default: /usr/local/bin/claude)",
    "config-wsl-example": "Example configuration in settings.json:",
    "config-wsl-example-json": "{\n  \"claudeCodeChat.wsl.enabled\": true,\n  \"claudeCodeChat.wsl.distro\": \"Ubuntu\",\n  \"claudeCodeChat.wsl.nodePath\": \"/usr/bin/node\",\n  \"claudeCodeChat.wsl.claudePath\": \"/usr/local/bin/claude\"\n}",
    // Advanced Features
    "advanced-title": "üîß Advanced Features",
    "advanced-subtitle": "Powerful capabilities for professional developers",
    "advanced-tool-title": "üõ†Ô∏è Tool Integration",
    "advanced-tool-desc": "Claude Code Chat provides secure access to all Claude Code tools:",
    "advanced-tool-li1": "Bash - Execute shell commands with permission controls",
    "advanced-tool-li2": "File Operations - Read, write, and edit files",
    "advanced-tool-li3": "Search - Grep and glob pattern matching across workspace",
    "advanced-tool-li4": "Web - Fetch and search web content",
    "advanced-tool-li5": "Multi-edit - Batch file modifications",
    "advanced-tool-li6": "MCP Servers - Extend functionality with Model Context Protocol servers",
    "advanced-tool-li7": "Permissions System - Granular control over tool execution for security",
    "advanced-analytics-title": "üìä Analytics & Monitoring",
    "advanced-analytics-li1": "Real-time cost tracking - Monitor your API usage",
    "advanced-analytics-li2": "Token consumption - See input/output token counts",
    "advanced-analytics-li3": "Response timing - Track performance metrics",
    "advanced-analytics-li4": "Session statistics - Comprehensive usage analytics",
    "advanced-checkpoint-title": "‚è™ Checkpoint System",
    "advanced-checkpoint-li1": "Instant restoration - One-click restore to any previous state",
    "advanced-checkpoint-li2": "Conversation checkpoints - Every change creates a restore point",
    "advanced-checkpoint-li3": "Visual timeline - See and navigate through all your project states",
    "advanced-history-title": "üîÑ Conversation History",
    "advanced-history-li1": "Automatic saving - Every conversation is preserved",
    "advanced-history-li2": "Smart restoration - Resume exactly where you left off",
    "advanced-history-li3": "Switch between chats - Easily check and switch to previous conversations"
  }
}