<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Claude Code Chat - Beautiful Claude Code Chat Interface for VS Code</title>
    <style>
        :root {
            --primary: #4F46E5;
            --primary-dark: #4338CA;
            --secondary: #10B981;
            --background: #F9FAFB;
            --card-bg: #FFFFFF;
            --text-primary: #1F2937;
            --text-secondary: #6B7280;
            --border: #E5E7EB;
            --accent: #8B5CF6;
            --success: #10B981;
            --warning: #F59E0B;
            --danger: #EF4444;
            --hero-gradient-start: #4F46E5;
            --hero-gradient-end: #7C3AED;
        }

        .dark-mode {
            --primary: #818CF8;
            --primary-dark: #6366F1;
            --secondary: #34D399;
            --background: #111827;
            --card-bg: #1F2937;
            --text-primary: #F9FAFB;
            --text-secondary: #D1D5DB;
            --border: #374151;
            --accent: #A78BFA;
            --success: #34D399;
            --warning: #FBBF24;
            --danger: #F87171;
            --hero-gradient-start: #6366F1;
            --hero-gradient-end: #8B5CF6;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            background-color: var(--background);
            color: var(--text-primary);
            line-height: 1.7;
            transition: background-color 0.3s, color 0.3s;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 24px;
        }

        /* Navigation */
        nav {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: var(--card-bg);
            border-bottom: 1px solid var(--border);
            padding: 1rem 0;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .nav-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .nav-logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
            white-space: nowrap;
            flex: 0 0 auto;
        }

        .nav-menu {
            display: flex;
            list-style: none;
            gap: 1.5rem;
            align-items: center;
            flex: 1; /* 新增，让菜单占据中间空间 */
            
            justify-content: center; /* 新增，让菜单项居中 */
            
        }

        .nav-menu a {
            text-decoration: none;
            color: var(--text-primary);
            font-weight: 500;
            transition: color 0.3s;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            white-space: nowrap;
        }

        .nav-menu a:hover {
            color: var(--primary);
            background-color: rgba(79, 70, 229, 0.1);
        }

        .nav-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex: 0 0 auto;
        }

        .language-toggle, .theme-toggle {
            background: var(--card-bg);
            border: 1px solid var(--border);
            border-radius: 30px;
            padding: 8px 16px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            white-space: nowrap;
        }

        .language-toggle:hover, .theme-toggle:hover {
            background: var(--primary);
            color: white;
        }

        /* Hero Section */
        header {
            background: linear-gradient(135deg, var(--hero-gradient-start), var(--hero-gradient-end));
            color: white;
            padding: 4rem 0;
            text-align: center;
            position: relative;
            overflow: hidden;
            margin-top: 80px;
        }


        header::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
            transform: rotate(30deg);
        }

        .hero-content {
            display: flex;
            align-items: center;
            gap: 3rem;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 24px;
        }

        .hero-left {
            flex: 1;
            text-align: left;
        }

        .hero-right {
            flex: 1;
            text-align: left;
            margin-top: 4rem; /* Increased margin */
        }
        
        .hero-badge-wrapper { /* New wrapper for centering */
             text-align: center;
        }

        .hero-badge {
            display: inline-block;
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 50px;
            padding: 8px 20px;
            font-size: 0.9rem;
            margin-bottom: 2rem;
            font-weight: 500;
        }

        h1 {
            font-size: 3rem;
            margin-bottom: 1.5rem;
            font-weight: 800;
            letter-spacing: -0.5px;
            line-height: 1.2;
        }

        .tagline {
            font-size: 1.4rem;
            margin-bottom: 2.5rem;
            opacity: 0.95;
            font-weight: 300;
        }

        .hero-description {
            font-size: 1rem;
            margin-bottom: 1.2rem;
            opacity: 0.9;
            line-height: 1.6;
            max-width: 90%;
        }

        .hero-description:last-child {
            margin-bottom: 2rem;
        }

        .cta-button {
            background-color: white;
            color: var(--primary);
            border: none;
            padding: 14px 32px;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            box-shadow: 0 8px 20px rgba(0,0,0,0.15);
            margin-top: 1rem;
        }

        .cta-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 25px rgba(0,0,0,0.2);
        }

        /* Section Styling */
        section {
            padding: 5rem 0;
        }

        .section-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .section-title {
            font-size: 2.2rem;
            color: var(--primary);
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .section-subtitle {
            font-size: 1.1rem;
            color: var(--text-secondary);
            max-width: 700px;
            margin: 0 auto;
        }

        /* Features Grid */
        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }

        .feature-card {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 8px 20px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            border: 1px solid var(--border);
            display: flex;
            align-items: center;
            gap: 1.5rem;
            text-align: left;
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.1);
        }

        .feature-icon {
            font-size: 2.5rem;
            color: var(--primary);
            flex-shrink: 0;
            margin-bottom: 0;
        }
        
        .feature-text {
            display: flex;
            flex-direction: column;
        }

        .feature-title {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            color: var(--text-primary);
            font-weight: 600;
        }

        .feature-description {
            color: var(--text-secondary);
            font-size: 0.95rem;
            line-height: 1.6;
        }

        /* Key Features Section */
        .key-features {
            background-color: var(--card-bg);
        }

        .key-features-list {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(360px, 1fr)); /* Increased min-width */
            gap: 2.5rem;
        }

        .key-feature-item {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 2.5rem;
            box-shadow: 0 8px 20px rgba(0,0,0,0.05);
            border: 1px solid var(--border);
            position: relative; /* Added for badge positioning */
        }

        .key-feature-item h3 {
            color: var(--primary);
            margin-bottom: 1.5rem;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.8rem;
            padding-right: 70px; /* Add padding to avoid overlap with badge */
        }

        .key-feature-item ul {
            list-style-type: none;
            padding-left: 0;
        }

        .key-feature-item li {
            margin-bottom: 1rem;
            padding-left: 1.8rem;
            position: relative;
            font-size: 1rem;
            line-height: 1.6;
        }

        .key-feature-item li:before {
            content: "✓";
            position: absolute;
            left: 0;
            color: var(--success);
            font-weight: bold;
            font-size: 1.1rem;
        }

        /* Usage Examples */
        .usage-examples {
            background-color: var(--background);
        }

        .example-card {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 2.5rem;
            margin-bottom: 3rem;
            box-shadow: 0 8px 20px rgba(0,0,0,0.05);
            border: 1px solid var(--border);
        }

        .example-title {
            font-size: 1.6rem;
            margin-bottom: 2rem;
            color: var(--primary);
            font-weight: 600;
        }

        .example-message {
            margin-bottom: 1.5rem;
            padding: 1.5rem;
            border-radius: 12px;
        }

        .user-message {
            background-color: rgba(79, 70, 229, 0.1);
            border-left: 4px solid var(--primary);
        }

        .claude-message {
            background-color: rgba(139, 92, 246, 0.1);
            border-left: 4px solid var(--accent);
        }

        .message-label {
            font-weight: 600;
            margin-bottom: 0.8rem;
            display: block;
            font-size: 1rem;
        }
        
        /* Configuration Section */
         .configuration-section { /* This is the original wrapper for Getting Started */
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
            gap: 3rem;
        }

        .config-card {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 2.5rem;
            box-shadow: 0 8px 20px rgba(0,0,0,0.05);
            border: 1px solid var(--border);
        }
        
        .config-card-wrapper { /* For WSL section */
             display: flex;
             gap: 3rem;
             align-items: flex-start;
        }
        .config-card-split-left {
            flex: 1.2;
        }
        .config-card-split-right {
            flex: 0.8;
            margin-top: 3.5rem;
        }

        .config-card h3 {
            font-size: 1.5rem;
            color: var(--primary);
            margin-bottom: 1.5rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin: 1.5rem 0;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }

        th, td {
            padding: 14px 18px;
            text-align: left;
            border-bottom: 1px solid var(--border);
        }

        th {
            background-color: var(--primary);
            color: white;
            font-weight: 600;
        }

        tr:last-child td {
            border-bottom: none;
        }
        
        /* Tips Section */
        .tips-section { 
            margin-top: 3rem;
        }

        .tips-section h3 {
            font-size: 1.7rem; /* Increased font size */
            margin-bottom: 2rem; /* Increased margin */
        }

        .tips-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 2.5rem;
        }

        .tip-category {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 2.5rem;
            box-shadow: 0 8px 20px rgba(0,0,0,0.05);
            border: 1px solid var(--border);
        }

        .tip-category h3 {
            color: var(--primary);
            margin-bottom: 1.8rem;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }

        .tip-category ul {
            list-style-type: none;
            padding-left: 0;
        }

        .tip-category li {
            margin-bottom: 1rem;
            padding-left: 1.8rem;
            position: relative;
            font-size: 1rem;
            line-height: 1.6;
        }

        .tip-category li:before {
            content: "⭐";
            position: absolute;
            left: 0;
            color: var(--warning);
            font-size: 1rem;
        }

        .highlight {
            background-color: rgba(255, 255, 0, 0.2);
            padding: 0.2rem 0.4rem;
            border-radius: 4px;
            font-weight: 500;
        }
        
        /* Footer */
        footer {
            background-color: var(--text-primary);
            color: white;
            padding: 4rem 0;
            text-align: center;
        }

        .footer-content {
            max-width: 600px;
            margin: 0 auto;
        }

        .footer-content p {
            margin-bottom: 1rem;
            font-size: 1rem;
        }

        /* Badges */
        .badge {
            display: inline-block;
            background-color: var(--secondary);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 600;
            vertical-align: middle;
        }

        .new-badge {
            background-color: var(--warning);
        }

        .badge-top-right {
            position: absolute;
            top: 1.5rem;
            right: 1.5rem;
            padding: 0.2rem 0.6rem;
            font-size: 0.7rem;
            font-weight: 700;
            border-radius: 8px;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .nav-menu {
                gap: 1rem;
            }
            
            .nav-menu a {
                padding: 0.5rem 0.8rem;
                font-size: 0.95rem;
            }
            
            .tips-grid {
                 grid-template-columns: 1fr;
            }
             .config-card-wrapper {
                 flex-direction: column;
            }
        }

        @media (max-width: 992px) {
            .hero-content {
                flex-direction: column;
                text-align: center;
            }
            
            .hero-left, .hero-right {
                width: 100%;
                text-align: center;
                margin-top: 2rem;
            }
            .hero-left {
                margin-top: 0;
            }
             .hero-description {
                max-width: 100%;
            }
            .configuration-section {
                grid-template-columns: 1fr;
            }
            
            .key-features-list {
                grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            }
            
             .features-grid {
                 grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .nav-menu {
                display: none;
            }
            
            h1 {
                font-size: 2.3rem;
            }
            
            .tagline {
                font-size: 1.2rem;
            }
            
            .section-title {
                font-size: 1.8rem;
            }
            
            section {
                padding: 3rem 0;
            }
            
            .key-features-list, .tips-grid {
                grid-template-columns: 1fr;
            }
            
            .hero-content {
                padding: 0 15px;
            }
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 2rem;
            }
            
            .tagline {
                font-size: 1.1rem;
            }
            
            .section-title {
                font-size: 1.6rem;
            }
            
            .nav-controls {
                gap: 0.5rem;
            }
            
            .language-toggle, .theme-toggle {
                padding: 6px 12px;
                font-size: 0.9rem;
            }
        }

        /* Code Blocks */
        pre {
            background-color: #1F2937;
            color: #F9FAFB;
            padding: 1.8rem;
            border-radius: 10px;
            overflow-x: auto;
            margin: 1.5rem 0;
            font-size: 0.9rem;
            line-height: 1.5;
        }

        /* Lists */
        ul, ol {
            margin: 1rem 0;
            padding-left: 1.3rem;
        }

        ul li, ol li {
            margin-bottom: 0.7rem;
            line-height: 1.6;
        }

        strong {
            font-weight: 600;
        }
    </style>
</head>
<body>
    <nav>
        <div class="container nav-container">
            <a href="https://claudecode.chat" class="nav-logo">🚀 Claude Code Chat</a>
            <ul class="nav-menu">
                <li><a href="#features">Features</a></li>
                <li><a href="#key-features">Key Features</a></li>
                <li><a href="#getting-started">Getting Started</a></li>
                <li><a href="#usage">Usage</a></li>
                <li><a href="#configuration">Configuration</a></li>
            </ul>
            <div class="nav-controls">
                <select class="language-toggle" onchange="changeLanguage(this.value)">
                    <option value="en">English</option>
                    <option value="zh">中文</option>
                    <option value="ja">日本語</option>
                    <option value="fr">Français</option>
                    <option value="de">Deutsch</option>
                    <option value="es">Español</option>
                    <option value="pt">Português</option>
                    <option value="ru">Русский</option>
                    <option value="ko">한국어</option>
                    <option value="it">Italiano</option>
                </select>
                <button class="theme-toggle" onclick="toggleTheme()">🌙</button>
            </div>
        </div>
    </nav>

    <header>
        <div class="hero-content">
            <div class="hero-left">
                <div class="hero-badge">VS Code Extension</div>
                <h1>🚀 Claude Code Chat</h1>
                <p class="tagline">Beautiful Claude Code Chat Interface for VS Code</p>
                <a href="#getting-started" class="cta-button">Get Started</a>
            </div>
            <div class="hero-right">
                <br/>
                <p class="hero-description">Ditch the command line and experience Claude Code like never before. This extension brings a stunning chat interface directly into your editor, making AI assistance accessible, visual, and enjoyable.</p>
                <p class="hero-description"><strong>🤖 Built by Claude Code for Claude Code</strong> - This extension was entirely developed using Claude Code itself. Claude Code created its own chat interface!</p>
            </div>
        </div>
    </header>

    <section id="features">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">✨ Why Choose Claude Code Chat?</h2>
                <p class="section-subtitle">Experience the future of AI-assisted development with these powerful features</p>
            </div>
            <div class="features-grid">
                <div class="feature-card">
                    <div class="feature-icon">🖥️</div>
                    <div class="feature-text">
                        <h3 class="feature-title">No Terminal Required</h3>
                        <p class="feature-description">Beautiful chat interface replaces command-line interactions</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">⏪</div>
                    <div class="feature-text">
                        <h3 class="feature-title">Restore Checkpoints</h3>
                        <p class="feature-description">Undo changes and restore code to any previous state</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">🔌</div>
                     <div class="feature-text">
                        <h3 class="feature-title">MCP Server Support</h3>
                        <p class="feature-description">Complete Model Context Protocol server management</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">💾</div>
                     <div class="feature-text">
                        <h3 class="feature-title">Conversation History</h3>
                        <p class="feature-description">Automatic conversation history and session management</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">🎨</div>
                     <div class="feature-text">
                        <h3 class="feature-title">VS Code Native</h3>
                        <p class="feature-description">Claude Code integrated directly into VS Code with native theming and sidebar support</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">🧠</div>
                     <div class="feature-text">
                        <h3 class="feature-title">Plan and Thinking modes</h3>
                        <p class="feature-description">Plan First and configurable Thinking modes for better results</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">⚡</div>
                     <div class="feature-text">
                        <h3 class="feature-title">Smart File/Image Context</h3>
                        <p class="feature-description">Reference any file, paste images or screenshots</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">🤖</div>
                     <div class="feature-text">
                        <h3 class="feature-title">Model Selection</h3>
                        <p class="feature-description">Choose between Opus, Sonnet, or Default</p>
                    </div>
                </div>
                <div class="feature-card">
                    <div class="feature-icon">🐧</div>
                     <div class="feature-text">
                        <h3 class="feature-title">Windows/WSL Support</h3>
                        <p class="feature-description">Full native Windows and WSL support</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="key-features" id="key-features">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">🌟 Key Features <span class="badge">V1.0</span></h2>
                <p class="section-subtitle">Discover the comprehensive set of tools that make Claude Code Chat the ultimate development companion</p>
            </div>
            <div class="key-features-list">
                <div class="key-feature-item">
                    <h3>💬 Beautiful Chat Graphical Interface</h3>
                    <ul>
                        <li>No terminal required - everything through the UI</li>
                        <li>Real-time streaming responses with typing indicators</li>
                        <li>One-click message copying with visual feedback</li>
                        <li>Enhanced markdown support with syntax highlighting</li>
                        <li>Auto-resizing input that grows with your content</li>
                        <li>Copy-to-clipboard for code blocks</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <h3>⏪ Checkpoint & Session Management</h3>
                    <ul>
                        <li>Restore Checkpoints - Instantly undo changes and restore to any previous state</li>
                        <li>Automatic Git-based backup system for safe experimentation</li>
                        <li>Browse and restore from any conversation checkpoint</li>
                        <li>Automatic conversation saving and restoration</li>
                        <li>Real-time cost and token tracking</li>
                        <li>Session statistics and performance metrics</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                     <div class="new-badge badge-top-right">NEW IN V1.0</div>
                    <h3>🔌 MCP Server Management</h3>
                    <ul>
                        <li>Popular Servers Gallery - One-click installation of common MCP servers</li>
                        <li>Custom Server Creation - Build and configure your own MCP servers</li>
                        <li>Server Management - Edit, delete, enable/disable servers through UI</li>
                        <li>Automatic Integration - Seamless permissions and tool integration</li>
                        <li>Cross-platform Support - Full WSL compatibility with path conversion</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <div class="new-badge badge-top-right">NEW IN V1.0</div>
                    <h3>🔒 Advanced Permissions System</h3>
                    <ul>
                        <li>Interactive Permission Dialogs - Detailed tool information with command previews</li>
                        <li>Always Allow Functionality - Smart command pattern matching for common tools (npm, git, docker)</li>
                        <li>YOLO Mode - Skip all permission checks for power users</li>
                        <li>Workspace Permissions - Granular control over what tools can execute</li>
                        <li>Real-time Permission Management - Add/remove permissions through intuitive UI</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <div class="new-badge badge-top-right">NEW IN V1.0</div>
                    <h3>🖼️ Image & Clipboard Support</h3>
                    <ul>
                        <li>Drag & Drop Images - Simply drag images directly into the chat</li>
                        <li>Clipboard Paste - Press Ctrl+V to paste screenshots and copied images</li>
                        <li>Multiple Image Selection - Choose multiple images through VS Code's file picker</li>
                        <li>Organized Storage - Automatic organization in .claude/claude-code-chat-images/</li>
                        <li>Format Support - PNG, JPG, JPEG, GIF, SVG, WebP, BMP formats</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <div class="new-badge badge-top-right">NEW IN V1.0</div>
                    <h3>📱 Sidebar Integration</h3>
                    <ul>
                        <li>Native VS Code Sidebar - Full chat functionality in the sidebar panel</li>
                        <li>Smart Panel Management - Automatic switching between main and sidebar views</li>
                        <li>Persistent Sessions - State maintained across panel switches</li>
                        <li>Activity Bar Integration - Quick access from VS Code's activity bar</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <h3>📁 Smart File Integration</h3>
                    <ul>
                        <li>Type @ to instantly search and reference workspace files</li>
                        <li>Image attachments via file browser and copy-paste screeshots</li>
                        <li>Lightning-fast file search across your entire project</li>
                        <li>Seamless context preservation for multi-file discussions</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <h3>🛠️ Tool Management</h3>
                    <ul>
                        <li>Visual dashboard showing all available Claude Code tools</li>
                        <li>Real-time tool execution with formatted results</li>
                        <li>Process control - start, stop, and monitor operations</li>
                        <li>Smart permission system for secure tool execution</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <h3>🎨 VS Code Integration</h3>
                    <ul>
                        <li>Native theming that matches your editor</li>
                        <li>Status bar integration with connection status</li>
                        <li>Activity bar panel for quick access</li>
                        <li>Responsive design for any screen size</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <h3>🤖 Model Selection</h3>
                    <ul>
                        <li>Opus - Most capable model for complex tasks requiring deep reasoning</li>
                        <li>Sonnet - Balanced model offering great performance for most use cases</li>
                        <li>Default - Uses your configured model setting</li>
                        <li>Model preference persists across sessions and is saved automatically</li>
                        <li>Easy switching via dropdown selector in the chat interface</li>
                        <li>Visual confirmation when switching between models</li>
                        <li>One-click model configuration through integrated terminal</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <h3>⚡ Slash Commands Integration</h3>
                    <ul>
                        <li>Slash Commands Modal - Type "/" to access all Claude Code commands instantly</li>
                        <li>19+ Built-in Commands - /cost, /status, /config, /help, /memory, /review, and more</li>
                        <li>Custom Command Support - Execute any Claude Code command with session context</li>
                        <li>Session-Aware Execution - All commands run with current conversation context</li>
                        <li>Terminal Integration - Commands open directly in VS Code terminal with WSL support</li>
                    </ul>
                </div>
                <div class="key-feature-item">
                    <h3>🧠 Advanced AI Modes</h3>
                    <ul>
                        <li>Plan First Mode - Toggle to make Claude plan before implementing changes</li>
                        <li>Thinking Mode - Configurable intensity levels (Think, Think Hard, Think Harder, Ultrathink)</li>
                        <li>Mode Toggles - Simple switches above the text input area</li>
                        <li>Intelligent Prompting - Different prompts based on selected thinking intensity</li>
                        <li>Token Awareness - Higher thinking levels consume more tokens but provide deeper reasoning</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <section id="getting-started">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">🚀 Getting Started</h2>
                <p class="section-subtitle">Set up Claude Code Chat in minutes and start enhancing your development workflow</p>
            </div>
            <div class="configuration-section">
                <div class="config-card">
                    <h3>Prerequisites</h3>
                    <ul>
                        <li>VS Code 1.80+ - Latest version recommended</li>
                        <li>Claude Code CLI - Install from Anthropic</li>
                        <li>Active Claude API or subscription - API or Pro/Max plan</li>
                    </ul>
                    
                    <h3 style="margin-top: 2rem;">Installation</h3>
                    <p><strong>Install from VS Code Marketplace</strong></p>
                    <pre>ext install claude-code-chat</pre>
                    
                    <p><strong>Or install manually</strong></p>
                    <ol>
                        <li>Download the .vsix file from releases</li>
                        <li>Run <code>code --install-extension claude-code-chat-x.x.x.vsix</code></li>
                    </ol>
                </div>
                
                <div class="config-card">
                    <h3>Open Claude Code Chat</h3>
                    <ul>
                        <li>Press Ctrl+Shift+C (or Cmd+Shift+C on Mac)</li>
                        <li>Or click the Claude icon in your status bar</li>
                        <li>Or use Command Palette: Claude Code: Open Chat</li>
                    </ul>
                    
                    <h3 style="margin-top: 2rem;">Keyboard Shortcuts</h3>
                    <table>
                        <thead>
                            <tr>
                                <th>Shortcut</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Ctrl+Shift+C</td>
                                <td>Open Claude Code Chat</td>
                            </tr>
                            <tr>
                                <td>Enter</td>
                                <td>Send message</td>
                            </tr>
                            <tr>
                                <td>@</td>
                                <td>Open file picker</td>
                            </tr>
                            <tr>
                                <td>/</td>
                                <td>Open slash commands modal</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>

    <section class="usage-examples" id="usage">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">💡 Usage Examples</h2>
                <p class="section-subtitle">See how Claude Code Chat can transform your development experience</p>
            </div>
            
            <div class="example-card">
                <h3 class="example-title">🔥 Code Review & Refactoring</h3>
                <div class="example-message user-message">
                    <span class="message-label">You:</span>
                    @src/components/UserProfile.tsx Can you review this component and suggest improvements?
                </div>
                <div class="example-message claude-message">
                    <span class="message-label">Claude:</span>
                    I'll analyze your UserProfile component. Looking at the code, here are my recommendations:
                    <ol>
                        <li><strong>Performance Optimization:</strong> Add React.memo() to prevent unnecessary re-renders</li>
                        <li><strong>TypeScript Enhancement:</strong> The props interface could be more specific</li>
                        <li><strong>Accessibility:</strong> Missing ARIA labels for screen readers</li>
                    </ol>
                    [Detailed analysis with code examples follows...]
                </div>
            </div>
            
            <div class="example-card">
                <h3 class="example-title">📊 Project Analysis</h3>
                <div class="example-message user-message">
                    <span class="message-label">You:</span>
                    Analyze the overall architecture of my project and identify potential issues
                </div>
                <div class="example-message claude-message">
                    <span class="message-label">Claude:</span>
                    I'll examine your project structure and identify areas for improvement:
                    <p>🏗️ <strong>Architecture Overview</strong></p>
                    <ul>
                        <li>React frontend with TypeScript</li>
                        <li>Node.js backend with Express</li>
                        <li>MongoDB database layer</li>
                    </ul>
                    <p>⚠️ <strong>Identified Issues</strong></p>
                    <ul>
                        <li>Missing error boundaries in React components</li>
                        <li>Database queries lack proper indexing</li>
                        <li>API routes missing input validation</li>
                    </ul>
                    [Detailed recommendations with implementation examples...]
                </div>
            </div>
            
            <div class="example-card">
                <h3 class="example-title">🐛 Debugging Assistant</h3>
                <div class="example-message user-message">
                    <span class="message-label">You:</span>
                    I'm getting a strange error in my API. Here's the stack trace: [paste error]
                </div>
                <div class="example-message claude-message">
                    <span class="message-label">Claude:</span>
                    Looking at this stack trace, the issue appears to be a race condition in your async middleware. Here's what's happening:
                    <ol>
                        <li><strong>Root Cause:</strong> Multiple requests are modifying shared state</li>
                        <li><strong>Solution:</strong> Implement proper request isolation</li>
                        <li><strong>Prevention:</strong> Add comprehensive error handling</li>
                    </ol>
                    [Step-by-step debugging guide follows...]
                </div>
            </div>
            
            <div class="example-card">
                <h3 class="example-title">⏪ Safe Experimentation with Checkpoints</h3>
                <div class="example-message user-message">
                    <span class="message-label">You:</span>
                    Can you refactor this entire component to use hooks instead of class components?
                </div>
                <div class="example-message claude-message">
                    <span class="message-label">Claude:</span>
                    I'll refactor your component to use React hooks. Don't worry - I'll create a checkpoint first so you can easily restore if needed.
                    <p>[Creates automatic checkpoint]</p>
                    <p>Here's the refactored component using hooks:</p>
                    <p>[Shows the new implementation]</p>
                    <p>If you want to revert these changes, just click "Restore Checkpoint" to go back to your original code instantly.</p>
                </div>
            </div>
        </div>
    </section>

    <section id="configuration">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">⚙️ Configuration</h2>
                <p class="section-subtitle">Customize Claude Code Chat to fit your development environment</p>
            </div>
            <div class="config-card">
                <div class="config-card-wrapper">
                    <div class="config-card-split-left">
                         <h3>WSL Configuration (Windows Users)</h3>
                         <p>If you're using Claude Code through WSL (Windows Subsystem for Linux), you can configure the extension to use WSL:</p>
                         <ol>
                            <li>Open VS Code Settings (Ctrl+, or Cmd+,)</li>
                            <li>Search for "Claude Code Chat"</li>
                            <li>Configure these settings:</li>
                        </ol>
                        <ul>
                            <li><strong>Claude Code Chat: WSL Enabled</strong> - Enable WSL integration</li>
                            <li><strong>Claude Code Chat: WSL Distro</strong> - Your WSL distribution name (e.g., Ubuntu, Debian)</li>
                            <li><strong>Claude Code Chat: WSL Node Path</strong> - Path to Node.js in WSL (default: /usr/bin/node)</li>
                            <li><strong>Claude Code Chat: WSL Claude Path</strong> - Path to Claude in WSL (default: /usr/local/bin/claude)</li>
                        </ul>
                    </div>
                    <div class="config-card-split-right">
                        <p>Example configuration in settings.json:</p>
                        <pre>{
  "claudeCodeChat.wsl.enabled": true,
  "claudeCodeChat.wsl.distro": "Ubuntu",
  "claudeCodeChat.wsl.nodePath": "/usr/bin/node",
  "claudeCodeChat.wsl.claudePath": "/usr/local/bin/claude"
}</pre>
                    </div>
                </div>
            </div>
            
            <div class="tips-section">
                <h3>🎯 Pro Tips & Tricks</h3>
                <div class="tips-grid">
                    <div class="tip-category">
                        <h3>🔥 File Context Magic</h3>
                        <ul>
                            <li>Type @ followed by your search term to quickly reference files</li>
                            <li>Use @src/ to narrow down to specific directories</li>
                            <li>Reference multiple files in one message for cross-file analysis</li>
                            <li><span class="highlight">NEW:</span> Copy-paste images directly into chat for visual context</li>
                            <li><span class="highlight">NEW:</span> Paste screenshots with Ctrl+V for instant visual communication</li>
                        </ul>
                    </div>
                    <div class="tip-category">
                        <h3>⚡ Productivity Boosters</h3>
                        <ul>
                            <li>Creates checkpoints automatically before changes for safe experimentation</li>
                            <li>Restore instantly if changes don't work out as expected</li>
                            <li><span class="highlight">NEW:</span> Permission system prevents accidental tool execution</li>
                            <li><span class="highlight">NEW:</span> YOLO mode for power users who want speed over safety</li>
                            <li>Use the stop button to cancel long-running operations</li>
                            <li>Copy message contents to reuse Claude's responses</li>
                            <li>Open history panel to reference previous conversations</li>
                            <li><span class="highlight">NEW:</span> Sidebar integration for multi-panel workflow</li>
                        </ul>
                    </div>
                    <div class="tip-category">
                        <h3>🎨 Interface Customization</h3>
                        <ul>
                            <li>The UI automatically adapts to your VS Code theme</li>
                            <li>Messages are color-coded: Green for you, Blue for Claude</li>
                            <li>Hover over messages to reveal the copy button</li>
                            <li><span class="highlight">NEW:</span> Enhanced code block rendering with syntax highlighting</li>
                            <li><span class="highlight">NEW:</span> Copy-to-clipboard functionality for code blocks</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section>
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">🔧 Advanced Features</h2>
                <p class="section-subtitle">Powerful capabilities for professional developers</p>
            </div>
            <div class="configuration-section">
                <div class="config-card">
                    <h3>🛠️ Tool Integration</h3>
                    <p>Claude Code Chat provides secure access to all Claude Code tools:</p>
                    <ul>
                        <li><strong>Bash</strong> - Execute shell commands with permission controls</li>
                        <li><strong>File Operations</strong> - Read, write, and edit files</li>
                        <li><strong>Search</strong> - Grep and glob pattern matching across workspace</li>
                        <li><strong>Web</strong> - Fetch and search web content</li>
                        <li><strong>Multi-edit</strong> - Batch file modifications</li>
                        <li><strong>MCP Servers</strong> - Extend functionality with Model Context Protocol servers</li>
                        <li><strong>Permissions System</strong> - Granular control over tool execution for security</li>
                    </ul>
                    
                    <h3 style="margin-top: 2rem;">📊 Analytics & Monitoring</h3>
                    <ul>
                        <li>Real-time cost tracking - Monitor your API usage</li>
                        <li>Token consumption - See input/output token counts</li>
                        <li>Response timing - Track performance metrics</li>
                        <li>Session statistics - Comprehensive usage analytics</li>
                    </ul>
                </div>
                <div class="config-card">
                    <h3>⏪ Checkpoint System</h3>
                    <ul>
                        <li>Instant restoration - One-click restore to any previous state</li>
                        <li>Conversation checkpoints - Every change creates a restore point</li>
                        <li>Visual timeline - See and navigate through all your project states</li>
                    </ul>
                    
                    <h3 style="margin-top: 2rem;">🔄 Conversation History</h3>
                    <ul>
                        <li>Automatic saving - Every conversation is preserved</li>
                        <li>Smart restoration - Resume exactly where you left off</li>
                        <li>Switch between chats - Easily check and switch to previous conversations</li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <section>
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">🤝 Contributing</h2>
                <p class="section-subtitle">Join our community and help improve Claude Code Chat</p>
            </div>
            <div class="configuration-section">
                <div class="config-card">
                    <h3>How to Contribute</h3>
                    <p>We welcome contributions! Here's how you can help:</p>
                    <ul>
                        <li>🐛 Report Bugs - Use our issue tracker</li>
                        <li>💡 Suggest Features - Share your ideas</li>
                        <li>🔧 Submit PRs - Help us improve the codebase</li>
                        <li>📚 Improve Docs - Make the documentation better</li>
                    </ul>
                    
                    <h3 style="margin-top: 2rem;">Development Setup</h3>
                    <pre>git clone https://github.com/andrepimenta/claude-code-chat
cd claude-code-chat
npm install
Click "F5" to run the extension or access the "Run and Debug" section in VSCode</pre>
                </div>
                
                <div class="config-card">
                    <h3>📝 License</h3>
                    <p>See the LICENSE file for details.</p>
                    
                    <h3 style="margin-top: 2rem;">🙏 Acknowledgments</h3>
                    <ul>
                        <li>Anthropic - For creating the amazing Claude AI and more specifically the Claude Code SDK</li>
                        <li>VS Code Team - For the incredible extension platform</li>
                        <li>Our Community - For feedback, suggestions, and contributions</li>
                    </ul>
                    
                    <h3 style="margin-top: 2rem;">📞 Support</h3>
                    <p>Need help? We've got you covered:</p>
                    <p>🐛 Issues: GitHub Issues</p>
                </div>
            </div>
        </div>
    </section>

    <footer>
        <div class="container">
            <div class="footer-content">
                <p>© 2025 Claude Code Chat. All rights reserved.</p>
                <p>Built by Claude Code for Claude Code.</p>
                <p>Claude is a trademark of Anthropic.VS Code is a trademark of Microsoft Corporation. This project is not officially affiliated with Anthropic or Microsoft.
            </div>
        </div>
    </footer>

    <script>
        // Language switching functionality
        const translations = {
            en: {
                "nav-features": "Features",
                "nav-key-features": "Key Features",
                "nav-getting-started": "Getting Started",
                "nav-usage": "Usage",
                "nav-configuration": "Configuration",
                "hero-badge": "VS Code Extension",
                "hero-title": "🚀 Claude Code Chat",
                "hero-tagline": "Beautiful Claude Code Chat Interface for VS Code",
                "hero-desc1": "Ditch the command line and experience Claude Code like never before. This extension brings a stunning chat interface directly into your editor, making AI assistance accessible, visual, and enjoyable.",
                "hero-desc2": "🤖 Built by Claude Code for Claude Code - This extension was entirely developed using Claude Code itself. Claude Code created its own chat interface!",
                "cta-button": "Get Started",
                "why-choose-title": "✨ Why Choose Claude Code Chat?",
                "why-choose-subtitle": "Experience the future of AI-assisted development with these powerful features",
                "no-terminal-title": "No Terminal Required",
                "no-terminal-desc": "Beautiful chat interface replaces command-line interactions",
                "restore-title": "Restore Checkpoints",
                "restore-desc": "Undo changes and restore code to any previous state",
                "mcp-title": "MCP Server Support",
                "mcp-desc": "Complete Model Context Protocol server management",
                "history-title": "Conversation History",
                "history-desc": "Automatic conversation history and session management",
                "native-title": "VS Code Native",
                "native-desc": "Claude Code integrated directly into VS Code with native theming and sidebar support",
                "plan-title": "Plan and Thinking modes",
                "plan-desc": "Plan First and configurable Thinking modes for better results",
                "context-title": "Smart File/Image Context",
                "context-desc": "Reference any file, paste images or screenshots",
                "model-title": "Model Selection",
                "model-desc": "Choose between Opus, Sonnet, or Default",
                "wsl-title": "Windows/WSL Support",
                "wsl-desc": "Full native Windows and WSL support",
                "key-features-title": "🌟 Key Features",
                "key-features-subtitle": "Discover the comprehensive set of tools that make Claude Code Chat the ultimate development companion"
            },
            zh: {
                "nav-features": "功能",
                "nav-key-features": "主要功能",
                "nav-getting-started": "入门指南",
                "nav-usage": "使用示例",
                "nav-configuration": "配置",
                "hero-badge": "VS Code 扩展",
                "hero-title": "🚀 Claude Code Chat",
                "hero-tagline": "VS Code 中的精美 Claude Code 聊天界面",
                "hero-desc1": "告别命令行，以前所未有的方式体验 Claude Code。此扩展将令人惊叹的聊天界面直接带入您的编辑器，使 AI 辅助变得可访问、可视化且令人愉快。",
                "hero-desc2": "🤖 由 Claude Code 为 Claude Code 构建 - 此扩展完全使用 Claude Code 本身开发。Claude Code 创建了自己的聊天界面！",
                "cta-button": "开始使用",
                "why-choose-title": "✨ 为什么选择 Claude Code Chat?",
                "why-choose-subtitle": "通过这些强大功能体验 AI 支援开发的未来",
                "no-terminal-title": "无需终端",
                "no-terminal-desc": "美しいチャットインターフェースがコマンドライン操作を置き換えます",
                "restore-title": "恢复检查点",
                "restore-desc": "撤销更改并将代码恢复到任何先前状态",
                "mcp-title": "MCP 服务器支持",
                "mcp-desc": "完整的模型上下文协议服务器管理",
                "history-title": "对话历史",
                "history-desc": "自动会话历史和会话管理",
                "native-title": "VS Code 原生",
                "native-desc": "VS Codeに直接統合されたClaude Codeとネイティブテーマ、サイドバー対応",
                "plan-title": "计划和思考模式",
                "plan-desc": "先计划模式和可配置的思考模式でより良い結果を",
                "context-title": "スマートファイル/画像コンテキスト",
                "context-desc": "任意のファイルを参照、画像やスクリーンショットを貼り付け",
                "model-title": "モデル選択",
                "model-desc": "Opus、Sonnet、またはDefaultから選択",
                "wsl-title": "Windows/WSL対応",
                "wsl-desc": "完全なネイティブWindowsとWSL対応",
                "key-features-title": "🌟 主要機能",
                "key-features-subtitle": "Claude Code Chatを究極の開発コンパニオンにする包括的なツールセットを発見"
            },
            ja: {
                "nav-features": "機能",
                "nav-key-features": "主要機能",
                "nav-getting-started": "はじめに",
                "nav-usage": "使用例",
                "nav-configuration": "設定",
                "hero-badge": "VS Code 拡張機能",
                "hero-title": "🚀 Claude Code Chat",
                "hero-tagline": "VS Code用の美しいClaude Codeチャットインターフェース",
                "hero-desc1": "コマンドラインを捨てて、Claude Codeをこれまでにない方法で体験しましょう。この拡張機能は、AIアシスタンスを視覚的で楽しいものにするために、エディタに直接素晴らしいチャットインターフェースを提供します。",
                "hero-desc2": "🤖 Claude CodeがClaude Codeのために構築 - この拡張機能はClaude Code自体を使って完全に開発されました。Claude Codeが独自のチャットインターフェースを作成しました！",
                "cta-button": "はじめる",
                "why-choose-title": "✨ Claude Code Chatを選ぶ理由",
                "why-choose-subtitle": "これらの強力な機能でAI支援開発の未来を体験",
                "no-terminal-title": "ターミナル不要",
                "no-terminal-desc": "美しいチャットインターフェースがコマンドライン操作を置き換えます",
                "restore-title": "チェックポイントの復元",
                "restore-desc": "変更を元に戻し、コードを以前の状態に復元",
                "mcp-title": "MCPサーバー対応",
                "mcp-desc": "完全なモデルコンテキストプロトコルサーバー管理",
                "history-title": "会話履歴",
                "history-desc": "自動会話履歴とセッション管理",
                "native-title": "VS Codeネイティブ",
                "native-desc": "VS Codeに直接統合されたClaude Codeとネイティブテーマ、サイドバー対応",
                "plan-title": "プランと思考モード",
                "plan-desc": "プランファーストと設定可能な思考モードでより良い結果を",
                "context-title": "Intelligenter Datei/Bildkontext",
                "context-desc": "Beliebige Dateien referenzieren, Bilder oder Screenshots einfügen",
                "model-title": "Modellauswahl",
                "model-desc": "Wählen Sie zwischen Opus, Sonnet oder Standard",
                "wsl-title": "Windows/WSL対応",
                "wsl-desc": "Vollständige native Windows und WSL Unterstützung",
                "key-features-title": "🌟 主要機能",
                "key-features-subtitle": "Claude Code Chatを究極の開発コンパニオンにする包括的なツールセットを発見"
            },
            fr: {
                "nav-features": "Fonctionnalités",
                "nav-key-features": "Fonctions Clés",
                "nav-getting-started": "Commencer",
                "nav-usage": "Exemples d'Utilisation",
                "nav-configuration": "Configuration",
                "hero-badge": "Extension VS Code",
                "hero-title": "🚀 Claude Code Chat",
                "hero-tagline": "Interface de Chat Claude Code Belle pour VS Code",
                "hero-desc1": "Abandonnez la ligne de commande et expérimentez Claude Code comme jamais auparavant. Cette extension apporte une interface de chat époustouflante directement dans votre éditeur, rendant l'assistance IA accessible, visuelle et agréable.",
                "hero-desc2": "🤖 Construit par Claude Code pour Claude Code - Cette extension a été entièrement développée en utilisant Claude Code lui-même. Claude Code a créé sa propre interface de chat !",
                "cta-button": "Commencer",
                "why-choose-title": "✨ Pourquoi Choisir Claude Code Chat ?",
                "why-choose-subtitle": "Découvrez l'avenir du développement assisté par IA avec ces fonctionnalités puissantes",
                "no-terminal-title": "Pas de Terminal Requis",
                "no-terminal-desc": "Belle interface de chat remplace les interactions en ligne de commande",
                "restore-title": "Restaurer les Points de Contrôle",
                "restore-desc": "Annuler les modifications et restaurer le code à n'importe quel état précédent",
                "mcp-title": "Support Serveur MCP",
                "mcp-desc": "Gestion complète du serveur Protocol Contexte Modèle",
                "history-title": "Historique des Conversations",
                "history-desc": "Historique des conversations automatique et gestion des sessions",
                "native-title": "Natif VS Code",
                "native-desc": "Claude Code intégré directement dans VS Code avec thématisation native et support de la barre latérale",
                "plan-title": "Modes Plan et Réflexion",
                "plan-desc": "Modes Plan d'Abord et Réflexion configurables pour de meilleurs résultats",
                "context-title": "Contexte Fichier/Image Intelligent",
                "context-desc": "Référencer n'importe quel fichier, coller des images ou captures d'écran",
                "model-title": "Sélection du Modèle",
                "model-desc": "Choisir entre Opus, Sonnet ou Par Défaut",
                "wsl-title": "Support Windows/WSL",
                "wsl-desc": "Support complet Windows et WSL natif",
                "key-features-title": "🌟 Fonctions Clés",
                "key-features-subtitle": "Découvrez l'ensemble complet d'outils qui fait de Claude Code Chat le compagnon de développement ultime"
            },
            de: {
                "nav-features": "Funktionen",
                "nav-key-features": "Hauptfunktionen",
                "nav-getting-started": "Erste Schritte",
                "nav-usage": "Anwendungsbeispiele",
                "nav-configuration": "Konfiguration",
                "hero-badge": "VS Code Erweiterung",
                "hero-title": "🚀 Claude Code Chat",
                "hero-tagline": "Schöne Claude Code Chat Oberfläche für VS Code",
                "hero-desc1": "Verabschieden Sie sich von der Befehlszeile und erleben Sie Claude Code wie nie zuvor. Diese Erweiterung bringt eine beeindruckende Chat-Oberfläche direkt in Ihren Editor, macht die KI-Unterstützung zugänglich, visuell und angenehm.",
                "hero-desc2": "🤖 Erstellt von Claude Code für Claude Code - Diese Erweiterung wurde vollständig mit Claude Code selbst entwickelt. Claude Code hat seine eigene Chat-Oberfläche erstellt!",
                "cta-button": "Loslegen",
                "why-choose-title": "✨ Warum Claude Code Chat wählen?",
                "why-choose-subtitle": "Erleben Sie die Zukunft der KI-unterstützten Entwicklung mit diesen leistungsstarken Funktionen",
                "no-terminal-title": "Kein Terminal erforderlich",
                "no-terminal-desc": "Schöne Chat-Oberfläche ersetzt Befehlszeilen-Interaktionen",
                "restore-title": "Wiederherstellungspunkte",
                "restore-desc": "Änderungen rückgängig machen und Code in jeden vorherigen Zustand zurückversetzen",
                "mcp-title": "MCP Server Unterstützung",
                "mcp-desc": "Vollständige Model Context Protocol Server Verwaltung",
                "history-title": "Konversationsverlauf",
                "history-desc": "Automatischer Konversationsverlauf und Sitzungsverwaltung",
                "native-title": "VS Code Nativ",
                "native-desc": "Claude Code direkt in VS Code integriert mit nativer Gestaltung und Seitenleistenunterstützung",
                "plan-title": "Plan- und Denkmodi",
                "plan-desc": "Plan zuerst und konfigurierbare Denkmodi für bessere Ergebnisse",
                "context-title": "Intelligenter Datei/Bildkontext",
                "context-desc": "Beliebige Dateien referenzieren, Bilder oder Screenshots einfügen",
                "model-title": "Modellauswahl",
                "model-desc": "Wählen Sie zwischen Opus, Sonnet oder Standard",
                "wsl-title": "Windows/WSL Unterstützung",
                "wsl-desc": "Vollständige native Windows und WSL Unterstützung",
                "key-features-title": "🌟 Hauptfunktionen",
                "key-features-subtitle": "Entdecken Sie den umfassenden Satz an Tools, der Claude Code Chat zum ultimativen Entwicklungsassistenten macht"
            }
        };

        let currentLanguage = 'en';

        function changeLanguage(lang) {
            currentLanguage = lang;
            updateLanguage();
        }

        function updateLanguage() {
            // Update navigation
            document.querySelector('.nav-menu li:nth-child(1) a').textContent = translations[currentLanguage]["nav-features"] || "Features";
            document.querySelector('.nav-menu li:nth-child(2) a').textContent = translations[currentLanguage]["nav-key-features"] || "Key Features";
            document.querySelector('.nav-menu li:nth-child(3) a').textContent = translations[currentLanguage]["nav-getting-started"] || "Getting Started";
            document.querySelector('.nav-menu li:nth-child(4) a').textContent = translations[currentLanguage]["nav-usage"] || "Usage";
            document.querySelector('.nav-menu li:nth-child(5) a').textContent = translations[currentLanguage]["nav-configuration"] || "Configuration";
            
            // Update hero section
            document.querySelector('.hero-badge').textContent = translations[currentLanguage]["hero-badge"] || "VS Code Extension";
            document.querySelector('h1').textContent = translations[currentLanguage]["hero-title"] || "🚀 Claude Code Chat";
            document.querySelector('.tagline').textContent = translations[currentLanguage]["hero-tagline"] || "Beautiful Claude Code Chat Interface for VS Code";
            document.querySelectorAll('.hero-description')[0].textContent = translations[currentLanguage]["hero-desc1"] || "Ditch the command line and experience Claude Code like never before...";
            document.querySelectorAll('.hero-description')[1].innerHTML = translations[currentLanguage]["hero-desc2"] || "<strong>🤖 Built by Claude Code for Claude Code</strong> - This extension was entirely developed using Claude Code itself...";
            document.querySelector('.cta-button').textContent = translations[currentLanguage]["cta-button"] || "Get Started";
            
            // Update why choose section
            document.querySelector('#features .section-title').textContent = translations[currentLanguage]["why-choose-title"] || "✨ Why Choose Claude Code Chat?";
            document.querySelector('#features .section-subtitle').textContent = translations[currentLanguage]["why-choose-subtitle"] || "Experience the future of AI-assisted development with these powerful features";
            
            // Update feature cards
            const featureTitles = [
                "no-terminal-title", "restore-title", "mcp-title", "history-title", 
                "native-title", "plan-title", "context-title", "model-title", "wsl-title"
            ];
            
            const featureDescs = [
                "no-terminal-desc", "restore-desc", "mcp-desc", "history-desc", 
                "native-desc", "plan-desc", "context-desc", "model-desc", "wsl-desc"
            ];
            
            const featureCards = document.querySelectorAll('.feature-card');
            featureCards.forEach((card, index) => {
                if (index < featureTitles.length) {
                    const titleElement = card.querySelector('.feature-title');
                    const descElement = card.querySelector('.feature-description');
                    
                    if (titleElement) {
                        titleElement.textContent = translations[currentLanguage][featureTitles[index]] || titleElement.textContent;
                    }
                    
                    if (descElement) {
                        descElement.textContent = translations[currentLanguage][featureDescs[index]] || descElement.textContent;
                    }
                }
            });
            
            // Update key features section title
            document.querySelector('#key-features .section-title').innerHTML = (translations[currentLanguage]["key-features-title"] || "🌟 Key Features") + " <span class='badge'>V1.0</span>";
            document.querySelector('#key-features .section-subtitle').textContent = translations[currentLanguage]["key-features-subtitle"] || "Discover the comprehensive set of tools that make Claude Code Chat the ultimate development companion";
        }

        // Theme switching functionality
        function toggleTheme() {
            document.body.classList.toggle('dark-mode');
            const themeToggle = document.querySelector('.theme-toggle');
            if (document.body.classList.contains('dark-mode')) {
                themeToggle.textContent = '☀️';
            } else {
                themeToggle.textContent = '🌙';
            }
        }

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    window.scrollTo({
                        top: target.offsetTop - 80,
                        behavior: 'smooth'
                    });
                }
            });
        });

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Set initial language to English
            currentLanguage = 'en';
            updateLanguage();
        });
    </script>
</body>
</html>